N = 2 Test Case
Theory 理論基礎
Helper funcs
In[168]:= n=2
Out[168]= 2
In[169]:= d=SparseArray[{x_,y_,l_,i_,j_}/;({x,y}=={i,j}||{x,y,l}=={i,Mod[j+1,n,1(*offset*)],1}||{x,y,l}=={Mod[i+1,n,1(*offset*)],j,2})->1,{n,n,2,n,n}]
Out[169]= SparseArray[Specified elements: 16
Dimensions: {2,2,2,2,2}

]
mag
In[344]:= mlist=1-(2Total[#,3]&/@Table[s,{s,Tuples[{0,1},{n,n}]}]/4)
Out[344]= {1,1/2,1/2,0,1/2,0,0,-(1/2),1/2,0,0,-(1/2),0,-(1/2),-(1/2),-1}
energy
In[320]:= elist=-8-(-2Total[#,3]&/@Table[Mod[TensorContract[TensorProduct[d,s],{{4,6},{5,7}}]//Normal,2],{s,Tuples[{0,1},{n,n}]}])
Out[320]= {-8,0,0,0,0,0,8,0,0,8,0,0,0,0,0,-8}
In[336]:= plist[T_]:=Exp[-1/T elist]/Total@Exp[-1/T elist]//N;
In[338]:= theoryplote=ListPlot[Transpose@{(Range[16]-1),plist[5]},PlotRange->{0,0.3}]
Out[338]= 
(*<e> 期望能量密度㞢计祘*)
In[356]:= Plot[elist.plist[T]/4,{T,0.1,5},PlotRange->{-2,0}]
Out[356]= 
(*Subscript[c, V] 期望 热容密度㞢峜筭*)
In[370]:= theoryplotCvvT=Plot[{Evaluate@D[elist.plist[T]/4,T],4/T^2((elist^2).plist[T]/16-(elist.plist[T]/4)^2)},{T,0.1,5},PlotRange->{0,0.5},PlotStyle->{Directive[Blue],Directive[Dashed,Yellow]}]
Out[370]= 
(*<m> 磁矩密度㞢计祘*)
In[369]:= theoryplotmvT=Plot[mlist.plist[T],{T,0.1,5},PlotRange->{-1,1}]
Out[369]= 
(*χ 磁感率密度㞢峜筭*)
In[368]:= theoryplotχvT=Plot[(mlist^2).plist[T]-(mlist.plist[T])^2,{T,0.1,10},PlotRange->{-1,1}]
Out[368]= 
Simulation 数值
取样
(*Test case for n=2*)
(*params: ./simulate-n 2--out--tmin 5--tmax 5--nt 1--rptSweep 1000--track_state*)
In[323]:= rawData0=Import[FileNameJoin[{NotebookDirectory[],"../data/n=2,T=(5.0,5.0),J=-1.0,rptSweep=1000_s.out"}],"CSV"];
In[325]:= Histogram[rawData0[[1,2;;]],{-0.5,15.5,1},"PDF"]~Show~theoryplote
Out[325]= 
掃温
(*Test case with an n=2 sweep*)
(*params: ./simulate-n 2--out--tmin 0.1--tmax 3.1--nt 10--rptSweep 10000--track_state*)
In[51]:= rawDatas=Import[FileNameJoin[{NotebookDirectory[],"../data/n=2,T=(0.1,3.1),J=-1.0,rptSweep=10000_s.out"}],"CSV"];
In[72]:= rawDatae=Import[FileNameJoin[{NotebookDirectory[],"../data/n=2,T=(0.1,3.1),J=-1.0,rptSweep=100000_e.out"}],"CSV"];
In[98]:= rawDatam=Import[FileNameJoin[{NotebookDirectory[],"../data/n=2,T=(0.1,3.1),J=-1.0,rptSweep=100000_m.out"}],"CSV"];
Histograms
(*E histogram (only 2 possible levels n=2峕祇有2䏻级)*)
Histogram[Transpose[(Transpose@rawDatae)[[2;;-2]]],{-8.5,8.5,1}]
Out[96]= 
In[102]:= Histogram[Transpose[(Transpose@rawDatam)[[2;;-2]]][[11]],{-8.5,8.5,1}]
Out[102]= 
(*Overscript[e, _] (Energy density 平均能量密度)  v.s. T*)
etoplot=Thread[f[Mean/@Transpose[(Transpose@rawDatae)[[2;;-2]]/4],StandardDeviation/@Transpose[(Transpose@rawDatae)[[2;;-2]]]/(4Sqrt[1000])(*De/√n 様夲均值標差*)]]/.f->Around
Out[374]= {-2,-2,-2,Around[-1.9960,0.0028],Around[-1.976,0.007],Around[-1.924,0.012],Around[-1.831,0.018],Around[-1.725,0.022],Around[-1.604,0.025],Around[-1.478,0.028],Around[-1.356,0.030]}
In[375]:= ListPlot[etoplot]
Out[375]= 
ListPlot[Transpose@{(Transpose@rawDatae)[[1]],1/((Transpose@rawDatae)[[1]])^2 (*β^2*)*Variance/@Transpose[(Transpose@rawDatae)[[2;;-2]]]/4 (*D^2e 様夲方差*)},PlotRange->All,
AxesLabel->{"T","Subscript[C, V]=β^2Δ^2e"},
Background->White,
FrameStyle->Black,
Frame->True,
PlotStyle->Red
]~Show~theoryplotCvvT
Out[378]= 
(*Overscript[m, _] (Magnetization density 平均磁矩密度) vs. T*)
mtoplot=Thread[f[Mean/@Transpose[(Transpose@rawDatam)[[2;;-2]]/4],StandardDeviation/@Transpose[(Transpose@rawDatam)[[2;;-2]]/(4Sqrt[1000])(*Ds/√n 様夲均值標差*)]]]/.f->Around
Out[376]= {1,1,1,Around[0.171,0.031],Around[-0.105,0.031],Around[-0.009,0.031],Around[0.031,0.030],Around[0.003,0.030],Around[-0.024,0.029],Around[-0.004,0.028],Around[-0.011,0.027]}
In[377]:= ListPlot[mtoplot,PlotRange->{-1,2}]
Out[377]= 